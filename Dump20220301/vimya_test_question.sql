-- MySQL dump 10.13  Distrib 8.0.28, for Win64 (x86_64)
--
-- Host: 19ivt.ru    Database: vimya
-- ------------------------------------------------------
-- Server version	8.0.24

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `test_question`
--

DROP TABLE IF EXISTS `test_question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `test_question` (
  `Key` int NOT NULL AUTO_INCREMENT,
  `Test_Key` int DEFAULT NULL,
  `Header` text,
  `Img_Key` int DEFAULT NULL,
  PRIMARY KEY (`Key`),
  KEY `test_question_fk1` (`Test_Key`),
  KEY `test_question_fk2` (`Img_Key`),
  CONSTRAINT `test_question_fk1` FOREIGN KEY (`Test_Key`) REFERENCES `test` (`Key`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `test_question_fk2` FOREIGN KEY (`Img_Key`) REFERENCES `img` (`Key`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=522 DEFAULT CHARSET=utf8mb3 PACK_KEYS=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `test_question`
--

LOCK TABLES `test_question` WRITE;
/*!40000 ALTER TABLE `test_question` DISABLE KEYS */;
INSERT INTO `test_question` VALUES (83,30,'Какой из следующих логических операторов - логический оператор ИЛИ?',NULL),(84,30,'Логическая операция с большим приоритетом выполнения:',NULL),(85,30,'Какой из следующих логических операторов - логический оператор И?',NULL),(86,30,'Для какого условия оператор if else позволяет определить действие?',NULL),(87,30,'Тело оператора выбора if, будет выполняться, если его условие:',NULL),(88,30,'Укажите неправильно записанную операцию отношения:',NULL),(89,30,'В каком выражении используется операция с наивысшим приоритетом?',NULL),(90,30,'Что делает операция ++?',NULL),(91,30,'Оператор вывода cout может печатать несколько значений или переменных в одной команде, используя следующий синтаксис:',NULL),(92,30,'Укажите операцию, приоритет выполнения которой больше остальных:',NULL),(93,30,'Укажите операцию, приоритет выполнения которой ниже остальных:',NULL),(94,31,'Укажите, какое из нижеследующих утверждений истинное',NULL),(95,31,'Укажите, какое из нижеследующих утверждений истинное',NULL),(96,31,'Укажите, какое из нижеследующих утверждений ложное',NULL),(97,31,'Укажите, какое из нижеследующих утверждений ложное',NULL),(98,31,'Как написать следующее выражение на языке С++ «Переменной a присвоено значение b»?',NULL),(99,31,'Укажите оператор сложения, который возвращает сумму двух чисел:',NULL),(100,31,'Укажите оператор вычитания, который возвращает разность двух чисел:',NULL),(101,31,'Укажите оператор умножения, который возвращает произведение двух чисел:',NULL),(102,31,'Укажите оператор деления, который возвращает частное двух чисел:',NULL),(103,31,'Укажите оператор получения остатка от целочисленного деления:',NULL),(104,31,'Какие преобразования типов данных невозможны без потери данных?',NULL),(105,32,'Приведите пример правильного преобразования целочисленной переменной value в ASCII эквивалент: ',NULL),(106,32,'Какой из ниже перечисленных вариантов ответа, показывает правильно записанный оператор выбора if?',NULL),(107,32,'Исходя из данного кода какое высказывание верно? int main() { int a,b,c,d; a=1; b=2; c=a+b+p; cout << p; ... }',NULL),(108,32,'Результат выполнения следующего фрагмента кода: !((1 || 0) && 0)',NULL),(109,32,'Укажите, какое из нижеследующих утверждений истинное.',NULL),(110,32,'Какой из операторов используется для разрешения области глобальной переменной?',NULL),(111,32,'Каков будет результат выражения !(1 && !(0 || 1))?',NULL),(112,32,'Если условие оператора выбора ложное, то:',NULL),(113,32,'Ввод данных в C++',NULL),(114,32,'Какой заголовочный файл следует подключить, чтобы можно было пользоваться приведением типов данных?',NULL),(115,33,'Чему равен результат выполнения следующего выражения: 1000 / 100 % 7 * 2 ?',NULL),(116,33,'В каком случае программа выведет строку на консоль?',NULL),(117,33,'Укажите все ключевые слова в приведенном примере? int calc(int a, int b, bool f)   {      if (f==1)         return a+b;     else         return a*b;   }',NULL),(118,33,'Укажите, какое из нижеследующих утверждений истинное',NULL),(119,33,'Что будет напечатано, после выполнения этого кода: cout << (5 << 3); ?',NULL),(120,33,'Результат выполнения следующего фрагмента кода: cout << 22 / 5 * 3;',NULL),(121,33,'Какое ключевое слово указывает, что целая переменная не может принимать отрицательные значения?',NULL),(122,33,'Результат выполнения следующего фрагмента кода: 54 << 3?',NULL),(123,33,'Это значение 5.9875e17 может быть сохранено в переменной, типа:',NULL),(124,33,'Какое из следующих значений эквивалентно зарезервированному слову true?',NULL),(125,33,'Тело оператора выбора if, будет выполняться. если его условие:',NULL),(126,34,'Каким будет результат работы программы?  #include <iostream> int main() {  int x = 3, y = 2, z = 1;  if(x >= y)       if(y <= z)         cout << \"Вариант 1\";       else       if(x >= z)         cout << \"Вариант 2\";       else        cout<<\"Вариант 3\";   return 0; }',NULL),(127,34,'Укажите каким будет результат вычисления цикла?     #include <iostream> int main() {   int m = 2, n = 5;   while (m <= 3)     {     while (m <= n)       {       n = m;       break;        }     break;     m++;      } }  cout << m << ‘ ’ <<  n;  return 0; }',NULL),(128,34,'Результат работы программы? int main()  {     for (int i = 0; i < 4; ++i)     {        switch (i)        {           case 0  : cout << \"0\";           case 1  : cout << \"1\"; continue;           case 2  : cout << \"2\"; break;           default : cout << \"D\"; break;        }        cout << \".\";     }     return 0;    }',NULL),(129,34,'В приведённом коде измените или добавьте один символ чтобы код напечатал 20 звёздочек - *. int i, N = 20; for(i = 0; i < N; i--)     printf(\"*\");',NULL),(130,34,'Какое значение будет выведено, в результате выполнения программы? #include <iostream>  int main() {   int x = 3;   switch(x)   {     case 0:       int x = 1;       cout << x << endl;     break;     case 3:       cout << x << endl;     break;     default:       x = 2;       cout << x << endl;   }   return 0; }',NULL),(131,34,'Какое значение будет выведено в результате работы программы? #include int main(int argc, char** argv) {    int x = 0;    int y = 0;    if (x++ && y++)    {      y += 2;    }    cout << x + y << endl;  return 0; }',NULL),(132,34,'Каким будет результат работы программы?  #include <iostream> using namespace std; int main() {     int a = 1, b = 2;     if (a == b);     cout << a << \" = \" << b << endl;     return 0; }',NULL),(133,34,'Результат работы программы?  #include <iostream> using namespace std; int main() {     const int x = 22;     x++;     cout << x;     return 0; }',NULL),(134,34,'Каким будет результат работы программы?  #include <iostream> using namespace std; int main() {     int a = 8;     int b = --a;     cout << a << b << endl;     return 0; }',NULL),(135,34,'Какое число нужно написать вместо многоточия, чтобы цикл выполнился ровно 3 раза?  #include <iostream> using namespace std; int main() {     int i;     i = 2;     while (i <= ...) {         cout << \"Привет!\n\";         i++;     } }',NULL),(136,55,'Укажите правильное обращение к полям структуры:  struct coord{int x; int z;}data; ',NULL),(137,55,'Какими по умолчанию объявляются элементы структуры?',NULL),(138,55,'При определении перечисления, какое ключевое слово необходимо использовать?',NULL),(139,55,'Какой заголовочный файл С++ содержит инструкции файлового ввода/вывода?',NULL),(140,55,'Дано: struct coord{int x; int z[];}; Что означает следующая запись: struct coord data[100];?',NULL),(141,55,'Битовые поля могут использоваться в union?',NULL),(142,55,'Цель структурного программирования - это:',NULL),(143,55,'При определении структуры необходимо использовать следующее ключевое слово:',NULL),(144,55,'Какими по умолчанию объявляются элементы объединения?',NULL),(145,55,'Какое объявление переменной типа структуры FFa является правильным?',NULL),(146,56,'Какой заголовочный файл С++ содержит инструкции файлового ввода/вывода?',NULL),(147,45,'Целое, которое может быть присвоено указателю, является',NULL),(148,45,'Указатель это:',NULL),(149,56,'Чем отличается структура struct от class',NULL),(150,45,'Выберите вариант ответа, где представлен указатель на объект типа T',NULL),(151,56,'В данном коде представлен доступ к участнику структуры.  int i1 = v.sz Выберите вариант описания доступа, который может соответствовать этому коду',NULL),(152,45,'Для чего используется операция разыменования указателя?',NULL),(153,56,'Где выделяет память оператор new?',NULL),(154,45,'Какой результат следующего выражения ? int* a;  int b;  a = &b;  b = 7;  *a++;  cout << b;',NULL),(155,56,'Выберите правильное утверждение для модификатора доступа public',NULL),(156,56,'Выберите правильное утверждение для модификатора доступа private',NULL),(157,45,'В чём отличие ссылки & от указателя *?',NULL),(158,45,'Выберите вариант ответа, где представлена ссылка на объект типа T.',NULL),(159,56,'Выберите правильное утверждение для модификатора доступа protected',NULL),(160,56,'В каком из следующих вариантов ответов выполнен корректный доступ к переменной структуры, причём структура объявлена через указатель?',NULL),(161,56,'Какой из следующих классов обрабатывает процесс записи в файл?',NULL),(162,56,'Выберите правильное определение структуры в С++',NULL),(163,45,'Что происходит в данном программном коде?: ++*p;',NULL),(164,57,'Какие ограничения налагаются на объединения?',NULL),(165,57,'С помощью какого ключевого слова можно задать имя типу?',NULL),(166,45,'Что происходит в данном программном коде?:  *p++',NULL),(167,57,'Основное правило структурного программирования состоит в том, что',NULL),(168,45,'Что такое идентификаторы в языке Си++?',NULL),(169,57,'Особенность базовых конструкций структурного программирования состоит в том, что:',NULL),(170,45,'Процесс упорядоченного размещения элементов в массиве называется …',NULL),(171,57,'Перечислителям (enum) нельзя',NULL),(172,45,'В результате успешной компиляции текста программы на C++ с каким расширением будет получен файл?',NULL),(173,57,'Что означает константа ios_base::ate, передаваемая в конструктор, в качестве аргумента?',NULL),(174,57,'Какое значение будет выведено на экран в результате выполнения кода? #include <iostream> const int SIZE = 5; struct tester { int array[::SIZE]; enum { SIZE = 3 }; void size() { std::cout<< sizeof(array) / sizeof(int); } }; int main(int argc, char** argv) { tester t; t.size(); return 0; }',NULL),(175,57,'Как организовать запись в файл?',NULL),(176,57,'Цель структурного программирования - это',NULL),(177,57,'При определении структуры необходимо использовать следующее ключевое слово:',NULL),(178,35,'В какой из следующих строк выполняется обращение к седьмому элементу массива, если размер массива равен 10?',NULL),(179,35,'Словосочетание \"Hello world!\" может быть сохранено в символьном массиве размером n элементов. Укажите, чему равно n?',NULL),(180,35,'Укажите зарезервированное ключевое слово для динамического выделения памяти:',NULL),(181,35,'Какой индекс имеет второй элемент массива А? int A[7];',NULL),(182,35,'Найдите верный вариант присвоения нуля последнему элементу массива А ',NULL),(183,35,'Каким образом в языке С++ объявляется двумерный массив А ?',NULL),(184,35,'Индексация массивов в языке С++ начинается',NULL),(185,35,'Для получения адреса переменной используется операция',NULL),(186,35,'Дан массив int array[5] = { 3, 10, 7, 9, 2}. Как обратиться к числу 7?',NULL),(187,35,'Если в массиве A 132 элемента, каким будет правильное обращение к последнему элементу массива?',NULL),(188,36,'Какой порядковый номер последнего элемента массива, размер массива 19?',NULL),(189,36,'Какими бывают массивы?',NULL),(190,36,'Сколько размерностей массива можно использовать в программах?',NULL),(191,36,'Если имеется объявление int a[15], какой фрагмент кода выводит все элементы массива?',NULL),(192,36,'Какая операция позволяет получить значение, записанное по адресу, который содержится в указателе?',NULL),(193,36,'Какой массив имеет самый большой размер? (char *s1= \"QWERTY\"; char s2[7]= \"qwerty\"; char *s3= \"127*27\";)',NULL),(194,36,'Какая команда заполняет массив с клавиатуры? ',NULL),(195,36,'Числовой массив А заполнен последовательно числами: 0, 5, 10, 15. Укажите значение элемента А[0]:',NULL),(196,36,'Что такое массив?',NULL),(197,36,'Укажите строку, которая возвращает адрес первого элемента в массиве arr:',NULL),(198,36,'Укажите правильное описание массива:',NULL),(199,36,'Отметьте все правильные утверждения о массивах в языке C++:',NULL),(200,37,'Если в списке инициализации массива из элементов простых типов (POD типов), элементов меньше, чем объявленный размер массива, например: int v[5] = {1, 2, 3}; то:',NULL),(201,37,'Какой код является ошибочным?',NULL),(202,37,'Требуется заполнить массив так: X = [1 3 5 7 9 11]. Какой оператор надо поместить в тело цикла вместо многоточия? for ( k=0; k<6; k++ ) {      ... }',NULL),(203,46,'Укажите зарезервированное ключевое слово для динамического выделения памяти.',NULL),(204,46,'Укажите правильное объявление указателя в С++',NULL),(205,46,'Укажите зарезервированное ключевое слово для высвобождения выделенной памяти:',NULL),(206,46,'Для получения адреса переменной используется операция',NULL),(207,46,'Если в массиве A 132 элемента, каким будет правильное обращение к последнему элементу массива?',NULL),(208,46,'Для инициализации указателя можно использовать:',NULL),(209,46,'Указатель – это переменная, которая содержит в качестве своего значения … другой переменной',NULL),(210,46,'Целым, которое может быть присвоено указателю, является:',NULL),(211,46,'В языке Си++ указатель - это',NULL),(212,46,'Какой из видов указателей описан в следующем коде?     void(*ptr_func)();     ptr_func = foo;     ptr_func();',NULL),(213,46,'Пример: val = *ptr; операция косвенной адресации * производит:',NULL),(214,47,'Метки в операторе Switch должны быть',NULL),(215,47,'Каков будет результат выполнения операторов nrs = 22; ptr = &nrs; val = *ptr;',NULL),(216,47,'Процесс определения значения ключа, содержащегося в массиве, называется …',NULL),(217,47,'Что произойдет после объявления в программе данного набора перечисляемых значений: enum{N=0, E=1, S=2, W=3};?',NULL),(218,47,'Какая операция позволяет получить значение, записанное по адресу, который содержится в указателе?',NULL),(219,47,'Что произойдёт если операция выделения памяти new завершится неудачно?',NULL),(220,47,'Какое из приведенных выражений верно?',NULL),(221,47,'Что нужно сделать для освобождения памяти после выполнения такого кода ? char *a; a = new char[20]',NULL),(222,47,'Какой будет результат ?    int f(int& x) {  static int a = 0; if (!a) a = ++x; return a;}  int y = 6; f(y); cout << f(y) << y',NULL),(223,47,'Какой будет результат вывода?static int a; a = 9;{    static int a = 8;}cout << a; ',NULL),(224,37,'Требуется заполнить массив так: X = [1 2 4 8 16 32]. Какой оператор надо поместить в тело цикла вместо многоточия? X[0] = 1; for ( k=1; k<6; k++ ) {      ... }',NULL),(225,40,'Какой символ является символом конца?',NULL),(226,37,'Числовой массив А заполнен последовательно числами: 7, 15, 87, 34. Укажите значение элемента А[2]:',NULL),(227,40,'Укажите корректное определение строковой переменной:',NULL),(228,37,'Что производит следующий фрагмент программы:  for (int i = 0;  i < n; i++) { 	   cout << a[i] << ‘ ‘; }',NULL),(229,40,'Какая функция определяет длину строки',NULL),(230,37,'Отметьте верный вариант задания массива:',NULL),(231,40,'Переменная типа signed char может принимать значения:',NULL),(232,37,'Укажите какой результат будет у следующего примера? float arr[3] = {10, 20, 30, 40};  float *a = arr;  cout << a[1];',NULL),(233,40,'Как правильно объявить строку А в языке С++',NULL),(234,37,'Укажите какой результат будет у следующего примера?  float array[5];  array[1] = 10;  array[2] = 3;  float array2[5]; array2 = array;  cout << array2[1];',NULL),(235,40,'Какой символ позволяет перейти на новую строку?',NULL),(236,37,'Укажите какой результат будет у следующего примера? float arr[3] = {10, 20, 30, 40};  float *a = arr;  cout << a[1];',NULL),(237,40,'Какой символ является символом табуляции ?',NULL),(238,37,'Двумерный массив Ar представленный в виде матрицы имеет вид  _           _ |  1  2   3   | |  5  6   7   | |_ 9  1  2 _|  Что будет на экране в результате выполнения кода int flag=7;  for (int i = 0; i<3; i++) { if (flag)      cout << Ar[1][i]; else cout << \"Error\"; }',NULL),(239,40,'С помощью какой функции можно узнать размер строки?',NULL),(240,38,'Как правильно объявить одномерный массив с именем array, состоящий из 10 элементов целочисленного типа?',NULL),(241,40,'Какой метод очищает строчку?',NULL),(242,38,'В каком случае данная программа выведет слово \"Yes\" ?  int main()  { int fl = 0;  int f [20], i; for (i = 0; i < 20; i++)  scant {\"%d\", &f[i]); for (i = 0; i < 19; i++)  if (f[i] ==f[i+1])  {fi ++ ; break; } if ( !fl ) printf (\"Yes\"); else printf{ \"No\" ); return 0; }',NULL),(243,40,'Какой метод ищет последнее вхождение подстроки?',NULL),(244,38,'Какой индекс имеет последний элемент массива A? int A[9];',NULL),(245,38,'Массив - это ...',NULL),(246,38,'В какой из следующих строк выполняется обращение к седьмому по счету элементу массива m, если размер массива равен 10?',NULL),(247,41,'Укажите строку, которая возвращает адрес первого элемента в массиве arr?',NULL),(248,41,'Что нужно сделать для освобождения памяти после выполнения такого кода ?  char *a; a = new char[20];',NULL),(249,41,'Какую библиотеку необходимо подключить в код для работы со строками?',NULL),(250,38,'Что делает представленный отрывок кода? 	int b=0; 	for( int count = 0; count<10; count++) 		b+=array[count]',NULL),(251,41,'Как проводится инициализация строки начальным значением?',NULL),(252,41,'Каким символом завершается Си-строка?',NULL),(253,38,'Что делает следующий код? #include <iostream> using namespase std; int main() { 	int n; 	cout<<”Введите челочисленное значение”; 	cin>>n;  	int* a = new int[n]; 	return 0; }',NULL),(254,38,'Представлен массив. Какой элемент будет находиться под именем а[1][4] ?  		|1| |2|  |3| |4| 		-------------- 		|5| |6|  |7| |8|',NULL),(255,38,'Как заполнить массив случайными целочисленными значениями от 10 до 100?',NULL),(256,38,'Для чего используется delete [] array;?',NULL),(257,39,'В каком случае данная программа выведет слово \"Yes\"?  #include <iostream> using namespace std; int main() {     int fl = 0;     int f[20], i;     for (i = 0; i < 10; i++)         cin >> f[i];     for (i = 0; i < 10; i++)         if (f[i] != 0)         {             fl++;          }     if (fl == 0) printf(\"Yes\");     else printf(\"N0\");     return 0; }',NULL),(258,38,'Для чего используется delete [] array;?',NULL),(259,39,'Что находит данная программа?  #include <iostream> using namespace std; int main() {     int i, res = 0, k = 0, f[10];     for (i = 0; i < 10; i++)         cin >> f[i];     for (i = 1; i < 10; i++) {         if (f[k] > f[i])             res = f[i];         k++;     }     cout << res;      return 0; }',NULL),(260,39,'Требуется заполнить массив именно так:     X = [0 3 4 7 8 11] Какой оператор надо поместить в тело цикла вместо многоточия?  #include <iostream>  using namespace std; int main() {     int k, x[6];     for (k = 0; k < 6; k++) {         ........;     }     for (k = 0; k < 6; k++) {         cout << x[k] << \" \";     }      return 0; }',NULL),(261,39,'Какое условие надо поставить вместо многоточия, чтобы найти количество четных элементов массива в переменной S?   #include <iostream>  using namespace std; int main() {     int k, S = 0, x[6];     for (k = 0; k < 6; k++) {         cin >> x[k];     }     for (k = 0; k < 6; k++) {         if (.......)             S++;     }     cout << S;     return 0; }',NULL),(262,39,'В каком случае данная программа выведет слово \"Yes\"?  #include <iostream> using namespace std; int main() {     int fl = 0;     int f[20], i;     for (i = 0; i < 10; i++)         cin >> f[i];     for (i = 0; i < 10; i++)         if (f[i] != 0)         {             fl++;          }     if (fl == 0) printf(\"Yes\");     else printf(\"N0\");     return 0; }',NULL),(263,39,'Какое значение будет напечатано, в результате выполнения следующего кода?  #include <iostream> int main() {     int sum = 0;     int array[3][] = { {0, 1, 2}, {3, 4, 5}, {6, 7, 8} };     for (int i = 0; i < 3; ++i)     {         for (int j = 2; j < 3; j++)         {             sum += array[i][j];         }     } cout << sum << endl;     return 0; }',NULL),(264,41,'Укажите статическую строку!',NULL),(265,39,'Каким будет результат работы программы?  #include <iostream> int main() {     int f[10], i;     for (i = 0; i < 10; i++)         f[i] = i + 1;     cout << f + 1;     return 0; }',NULL),(266,39,'Какое условие надо поставить вместо многоточия, чтобы найти сумму положительных элементов массива в переменной S?  #include <iostream> using namespace std; int main() {     int k, S = 0, x[10];     for (k = 0; k < 10; k++) {         cin >> x[k];     }     for (k = 0; k < 10; k++) {         if (.....)             S = S + x[k];     }     cout << S;     return 0; }',NULL),(267,39,'Что находит данная программа?  #include <iostream> using namespace std; int main() {     int sum = 0;     int array[3][3] = { {1, 12, 35}, {7, 41, 21}, {30, 4, 8} };     for (int i = 0; i < 3; ++i)     {         for (int j = 0; j < 3; j++)         {             if (i == j)                 sum += array[i][j];         }     }     cout << sum << endl;     return 0; }',NULL),(268,39,'Какое значение будет напечатано, в результате выполнения следующего кода?  #include <iostream> int main() {     int sum = 0;     int array[3][] = { {0, 1, 2}, {3, 4, 5}, {6, 7, 8} };     for (int i = 0; i < 3; ++i)     {         for (int j = 2; j < 3; j++)         {             sum += array[i][j];         }     } cout << sum << endl;     return 0; }',NULL),(269,39,'Необходимо вычислить сумму элементов 3-го столбца матрицы размером 3x3. Какое условие и оператор надо поставить вместо многоточия?  #include <iostream> using namespace std; int main() {     int sum = 0;     int array[3][3] = { {1, 12, 35}, {7, 41, 21}, {30, 4, 8} };      for (int i = 0; i < 3; ++i)     {         for (int j = 0; j < 3; j++)         {             if (i == ..)                 .........;         }     }     cout << sum << endl;     return 0; }',NULL),(270,39,'Какое условие надо поставить вместо многоточия, чтобы найти сумму положительных элементов массива в переменной S?  #include <iostream> using namespace std; int main() {     int k, S = 0, x[10];     for (k = 0; k < 10; k++) {         cin >> x[k];     }     for (k = 0; k < 10; k++) {         if (.....)             S = S + x[k];     }     cout << S;     return 0; }',NULL),(271,39,'Каков будет результат работы программы?  #include <iostream> using namespace std; int main() {     int i, n, mas[100];     cin >> n;     for (i = 0; i < n; i++)         cin >> mas[i];     cout << endl;     for (i = 0; i < n; i++)     {         if (mas[i] < 0)             mas[i] = 0;     }     for (i = 0; i < n; i++)         cout << mas[i] << ;     system(\"pause\");     return 0; }',NULL),(272,41,'Какая из следующих функций добавляет одну строку в конец другой?',NULL),(273,41,'Как изменить начальный символ строки “Hello” чтобы в результате получилось “Mello” ?',NULL),(274,41,'Как вставить символ двойных кавычек в строку?',NULL),(275,41,'Какая функция копирует содержимое одной строки в другую',NULL),(277,60,'Линейный список, в котором доступен только последний элемент, называется:',NULL),(278,60,'Структура данных, работа с элементами которой организована по принципу FIFO (первый пришел - первый ушел) это:',NULL),(279,60,'Дерево называется полным бинарным, если степень исходов вершин равна:',NULL),(280,60,'Объект, предоставляющий доступ к элементам контейнера и позволяющий их перебирать:',NULL),(281,60,'Объекты класса, получившие свойство функций, называются:',NULL),(282,60,'Объект, который определяет вычислительную процедуру:',NULL),(283,60,'Объект, управляющий набором объектов в памяти:',NULL),(284,60,'В чем особенность бинарного дерева поиска? ',NULL),(285,60,'Ассоциативный контейнер, который работает по принципу — [ключ — значение]: ',NULL),(286,60,'Метод для удаления значения из словаря:',NULL),(287,60,'Ассоциативный контейнер, который работает по принципу — [ключ — значение]: ',NULL),(288,61,'Линейный список, в котором доступен только последний элемент, называется:',NULL),(289,61,'Какую дисциплину обслуживания принято называть FIFO?',NULL),(290,61,'Объекты класса, получившие свойство функций, называются:',NULL),(291,61,'Объект, который определяет вычислительную процедуру:',NULL),(292,61,'Объект, управляющий набором объектов в памяти:',NULL),(293,61,'В чем отличие циклического списка от линейного?',NULL),(294,61,'Термин, которым называют ситуацию, когда совершается попытка удаления данных из пустой структуры называется _____.',NULL),(295,61,'В какой структуре данных вставка и удаление происходят на одном конце?',NULL),(296,61,'В связном представлении разреженной матрицы, голова списка столбцов хранит ...',NULL),(297,61,'Какой объект отвечает за адаптацию компонентов для обеспечения различного интерфейса?',NULL),(298,61,'Какой объект отвечает за адаптацию компонентов для обеспечения различного интерфейса?',NULL),(299,62,'В чём отличительная особенность динамических объектов?',NULL),(300,62,'Какое значение будет напечатано? #include <iostream> const int x = 12; int main(intargc, char** argv) { enum dog { x = x, y }; std::cout<< y <<std::endl; return 0; }',NULL),(301,62,'Как объявить вектор элементов целых чисел?',NULL),(302,62,'Абстрактная модель с рядом определенных функций, позволяющих совершать различные действия, в том числе имитировать работу динамического массива:',NULL),(303,62,'Как объявить словарь?',NULL),(304,62,'Структура данных, работа с элементами которой организована по принципу FIFO (первый пришел - первый ушел) это:',NULL),(305,62,'C помощью каких знаков идет обращение к элементам контейнера?',NULL),(306,62,'Структура данных, которая построена по принципу LILO (last in — last out: последним пришел — последним вышел):',NULL),(307,62,'Какое максимальное расстояние между двумя узлами в сбалансированном двоичном дереве из n элементов?',NULL),(308,62,'Какое положение будет верно относительно B-дерева (B-Tree)?',NULL),(309,63,'STL – это:',NULL),(310,63,'В памяти ЭВМ бинарное дерево удобно представлять в виде:',NULL),(311,63,'Обязательными элементами словаря являются?',NULL),(312,63,'При объявлении одномерного массива постоянной длины определяется:',NULL),(313,63,'Какие из перечисленных операций для односвязного списка всегда изменяет состояние начального элемента?',NULL),(314,63,'Какие из указанных структур данных могут хранить в себе одновременно элементы различных (произвольных) типов?',NULL),(315,63,'Какая структура данных соответствует принципу: FIFO?',NULL),(316,63,'Какой тип списка предпочтительнее всего использовать если нужно получить элемент, находящийся на позиции n?',NULL),(317,63,'Каких методов в представленном шаблоне класса не существует для бинарного дерева поиска?  Template<typedef X> class BinaryTreeSearch     {  node<X>* head;   public:   void insert_node(node<X>* currentNode); //1   void left_rotate(node<X>* rotateNode); //2   void right_rotate(node<X>* rotateNode); //3   void delete_node(node<X>* deleteNode); //4   void inorder_tree_walk(node<X>* walkNode); //5   node<X>* tree_search(X data); //6   };',NULL),(318,63,'data - циклический массив из N элементов и last - индекс в этом массиве, какая формула индекса следующего после last элемента?',NULL),(319,63,'Если куча реализована с использованием одномерного массива data с n элементами (n > 0), где будет находится элемент с наибольшим значением?',NULL),(320,64,'Какое значение будет напечатано? #include <iostream> using namespace std; const int x = 11; int main(intargc, char** argv) { enum dog { x = x, y }; cout<< y <<endl; return 0; }',NULL),(321,64,'За что отвечает функция Clist?  #include <iostream> using namespace std; struct List {     int x;                                 List *Next,*Head; }; void Add(int x, List *&MyList) {     List *temp = new List;     temp->x = x;     temp->Next = MyList->Head;     MyList->Head = temp; } void Show(List *MyList)  {     List *temp = MyList->Head;     while (temp != NULL)     {         cout << temp->x << \" \";         temp = temp->Next;     } } void Clist (List *MyList)     {     while (MyList->Head != NULL)     {         List *temp = MyList->Head->Next;          delete MyList->Head;          MyList->Head = temp;     } } int main() {     List *MyList = new List;      MyList->Head = NULL;      for (int i=0; i<10; i++) Add(i,MyList);      Show(MyList);     Clist (MyList);     delete MyList->Head;     delete MyList; }',NULL),(322,64,'Что необходимо поставить вместо многоточия, чтобы заполнить очередь элементами?  #include <iostream> using namespace std; struct Node {     int data;     Node *next; }; class List { private:     Node *head;  public:     List()     {         head = NULL;     }     void addNode(int d)     {         Node *nd = new Node;          nd->data = d;                nd->next = NULL;             if(head == NULL)             head = nd;         else                     {             Node *current = head;             while(current->next != NULL)                 current = current->next;             current->next = nd;         }     }     void printList()     {         Node *current = head;         while(current != NULL)         {             cout << current->data << endl;             current = current->next;         }     } }; int main() {     List myList;     …(5);     …(11);     …(27);     …(35);     …(50);     return 0; }',NULL),(323,64,'Что находит данная программа?  #include <iostream> using namespace std; struct node {            node(const int& v): item(v), next(nullptr) {}     int item;     node *next; }; struct list {     list(): head(nullptr), tail(nullptr), size(0) {}     ~list()     {         while (head != nullptr)         {             tail = head->next;             delete head;             head = tail;         }     }     void push_back(const int& val)     {         node *tmp = new node(val);         if (head != nullptr)         {              tail->next = tmp;             tail = tail->next;         }         else             head = tail = tmp;         ++size;     }        node *head;     node *tail;      size_t size; };   int main(void) {     list lst;     int arr[] = {123, -7, 34, 1, 23, -9, 0, 0, 34, 78, -67};         for (size_t i = 0; i != sizeof arr / sizeof *arr; ++i)         lst.push_back(arr[i]);        for (size_t i = 0; i != lst.size - 1; ++i)      {                node *tmp2 = lst.head, *tmp1;         for(size_t j = 0; j != lst.size - 1 - i; ++j)          {                  tmp1 = tmp2;             tmp2 = tmp2->next;             if (tmp2->item < tmp1->item)                  swap(tmp1->item, tmp2->item);         }     }     for (node *i = lst.head; i != lst.tail->next; i = i->next)         cout << i->item << ;     return 0; }',NULL),(324,64,'Дан 5-ти размерный список с элементами [1, 2, 3, 4, 5] Какой будет результат работы программы при вводимых числах 6 и 8?  #include <iostream> using namespace std; struct element {     int x;     element *next; };   void push_back(element* &head, int x) {     if (head == NULL) {         head = new element();         head->x = x;     }     else {         element *i = head;         while (i->next != NULL)             i = i->next;         i->next = new element();         i->next->x = x;     } } void push_first(element* &head, int x) {     if (head == NULL) push_back(head, x);     else {         element *i = new element();         i->x = x;         i->next = head;         head = i;     } } void Replace_Last(element* &head, int x) {     element *i = head;     if (i != NULL) {         while (i->next != NULL)             i = i->next;         i->x = x;     }     else push_back(head, x); } void delete_and_push_first(element* &head, int x) {     if (head != NULL && head->next != NULL) {         element *i = head;         while (i->next->next != NULL)             i = i->next;         i->x = i->next->x;         delete i->next;         i->next = NULL;         push_first(head, x);     }     else push_first(head, x); } void Write_List(element *head) {     while (head != NULL) {         cout << head->x << \" \";         head = head->next;     } } int main() {     setlocale(0, \"\");     int n, a;     element *head = 0;     cin >> n;     for (int i = 0; i < n; i++) {         cin >> a;         push_back(head, a);     }     Write_List(head);     cin >> a;     Replace_Last(head, a);     Write_List(head);     cin >> a;     delete_and_push_first(head, a);     Write_List(head);     return 0; }',NULL),(325,64,'Каким будет результат работы программы?  #include <stack> #include <iostream> #include <utility> using namespace std; class Node { public:     Node(int num) : _num(num), _next(nullptr) {}     friend class List; private:     int _num;     Node* _next; }; class List { public:     List() : _root(nullptr) {}     void add(int rhs)     {         if (!_root)         {             _root = new Node(rhs);         }         else         {             Node* tmp = _root;             while (tmp->_next)             {                 tmp = tmp->_next;             }             tmp->_next = new Node(rhs);         }     }     void print() const     {         Node* tmp = _root;         while (tmp)         {             cout << tmp->_num << \"  \";             tmp = tmp->_next;         }         cout << endl;     }     void minmax()     {         if (_root)         {             Node* min = _root, * max = _root, * tmp = _root;             while (tmp)             {                 if (tmp->_num < min->_num)                 {                     min = tmp;                 }                 else if (tmp->_num > max->_num)                 {                     max = tmp;                 }                 tmp = tmp->_next;             }             swap(min->_num, max->_num);         }     }     void reverse()     {         stack<int> stk;         Node* tmp = _root;         while (tmp)         {             stk.push(tmp->_num);             tmp = tmp->_next;         }         tmp = _root;         while (tmp)         {             tmp->_num = stk.top();             stk.pop();             tmp = tmp->_next;         }     }     void doubling()     {         Node* tmp = _root;         while (tmp)         {             tmp->_num *= 2;             tmp = tmp->_next;         }     }     ~List()     {         Node* tmp = _root;         while (tmp)         {             _root = tmp->_next;             delete tmp;             tmp = _root;         }     } private:     Node* _root; }; int main() {     List lst;     lst.add(7);     lst.doubling();     lst.add(3);     lst.doubling();     lst.add(8);     lst.add(8);     lst.minmax();     lst.minmax();     lst.reverse();     lst.reverse();     lst.print();     return 0; }',NULL),(326,64,'Какая структура реализована на ниже представленном коде программы?  #include \"stdafx.h\" #include <iostream> using namespace std; struct Node {     int value;     Node* left;     Node* right; }; struct NodeType {     Node* root;     void insert(Node* tree, int item);     void insertItem(int value) {         insert(root, value);     } }; void NodeType::insert(Node* tree, int number) {     if (tree == NULL) {         tree = new Node;         tree->left = NULL;         tree->right = NULL;         tree->value = number;         cout << \"DONE\";     }     else if (number < tree->value) {         insert(tree->left, number);     }     else {         insert(tree->right, number);     } } int main() {     NodeType* test = new NodeType;     test->insertItem(8);      return 0; }',NULL),(327,64,'Какой будет результат работы программы при вводимом числе 6?  #include <iostream> #include <queue>  #include <stack>  using namespace std; struct Edge {   int begin;   int end; }; int main() {   system(\"chcp 1251\");   system(\"cls\");   queue<int> Queue;   stack<Edge> Edges;   int req;   Edge e;   int mas[7][7] = { { 0, 1, 1, 0, 0, 0, 1 },   { 1, 0, 1, 1, 0, 0, 0 },   { 1, 1, 0, 0, 0, 0, 0 },   { 0, 1, 0, 0, 1, 0, 0 },   { 0, 0, 0, 1, 0, 1, 0 },   { 0, 0, 0, 0, 1, 0, 1 },   { 1, 0, 0, 0, 0, 1, 0 } };   int nodes[7];    for (int i = 0; i < 7; i++)      nodes[i] = 0;   cout << \"N = \"; cin >> req; req--;   Queue.push(0);    while (!Queue.empty())   {     int node = Queue.front();      Queue.pop();     nodes[node] = 2;      for (int j = 0; j < 7; j++)     {       if (mas[node][j] == 1 && nodes[j] == 0)       {          Queue.push(j);          nodes[j] = 1;          e.begin = node; e.end = j;         Edges.push(e);         if (node == req) break;       }     }     cout << node + 1 << endl;   }   cout << \"Путь до вершины \" << req + 1 << endl;   cout << req + 1;   while (!Edges.empty()) {     e = Edges.top();     Edges.pop();     if (e.end == req) {       req = e.begin;       cout << \" <- \" << req + 1;     }   }   cin.get(); cin.get();   return 0; }',NULL),(328,64,'Каким будет результат работы программы?  #include <iostream> using namespace std; int mas[7][7] = { { 0, 1, 1, 0, 0, 0, 1 },  { 1, 0, 1, 1, 0, 0, 0 }, { 1, 1, 0, 0, 0, 0, 0 }, { 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 0, 1, 0, 1, 0 }, { 0, 0, 0, 0, 1, 0, 1 }, { 1, 0, 0, 0, 0, 1, 0 } }; int nodes[7];  void search(int st, int n) {   int r;   cout << st + 1 << \" \";   nodes[st] = 1;   for (r = 0; r < n; r++)     if ((mas[st][r] != 0) && (nodes[r] == 0))       search(r, n); } int main() {   for (int i = 0; i < 7; i++)     nodes[i] = 0;   search(0, 7);   cin.get();   return 0; }',NULL),(329,48,'Какой результат у следующего выражения? struct str { int   a = 2; float b = 10; } m1, m2; cout << m1.a * m2.b;',NULL),(330,48,'Какой результат следующего выражения ? int *a; int b; a = &b; b = 7; (*a)++; cout << b;',NULL),(331,48,'Что описывает данный программный код? struct {char fio[30];int date, code;double salary;}staff[100], *ps;',NULL),(332,48,'Какое выражение верно с точки зрения целесообразности использования динамического распределения памяти?',NULL),(333,48,'Что будет напечатано в результате выполнения следующего кода?    int x=39, *p = &x;   cout << p << \"__\" << *p ;',NULL),(334,48,'Что будет напечатано в результате выполнения следующего кода?    char x[] = \"Hello, world\";  char* p = x; p += 4; cout << *p;  ',NULL),(335,48,'Что будет выведено в результате выполнения следующего кода?    int a[4] = { 1,2,3,4};  int* p = a; cout << (*p+2) + *p;',NULL),(336,48,'Что произойдёт при использовании неправильного адреса в операции delete?',NULL),(337,49,'В чем заключается ошибка данного кода? #include <iostream> using namespace std; int main() {     double d(4.7);     int *ptr = &d;     cout << ptr;     return 0; }',NULL),(338,50,'Какое минимальное количество функций необходимо для программы, написанной на языке C++?',NULL),(339,50,'Что в языке С++ является стартовой точкой программы?',NULL),(340,50,'Величины, описанные вне функции, а также ее параметры, являются:',NULL),(341,50,'В программе имеется функция с прототипом int func(int k, double f). Какое из следующих объявлений не приведет к ошибке компиляции?',NULL),(342,50,'Количество формальных параметров передаваемой функции?',NULL),(343,50,'Чему равен результат работы функции, при value=2.0?    string  sayHello(double value) {   return value*value; }',NULL),(344,50,'Выберите все правильные утверждения:',NULL),(345,50,'Список параметров функции описан как \"void\". Что можно сказать о параметрах этой функции?',NULL),(346,50,'Дайте определение понятию прототипа функции',NULL),(347,50,'Шаблон функции – это:',NULL),(348,51,'Отметьте истинное высказывание, если вызываются подряд несколько функций:',NULL),(349,51,'Отметьте допустимые имена функций:',NULL),(350,51,'Если функция вычисления суммы целых чисел от 1 до n имеет прототип int sum(int n), запишите определение функции, используя рекурсию:',NULL),(351,51,'Если функция вычисления факториала n имеет прототип int fact(int n), отметьте код, использующий рекурсию и правильно вычисляющий значение факториала:',NULL),(352,51,'Если функция вычисления суммы целых чисел, находящихся между двумя заданными (начальное и конечное включительно), имеет прототип int sum(int start, int end), запишите определение функции, используя рекурсию:',NULL),(353,51,'Совокупность типов формальных параметров, их порядка и имени функции определяет:',NULL),(354,51,'Если функция имеет тип void, то неверно, что',NULL),(355,51,'Параметр функции описан как \"int a\". Соответствующий ему аргумент может быть:',NULL),(356,51,'Как называется функция, которая вызывает саму себя?',NULL),(357,51,'Отметьте, какому определению функции может соответствовать вызов func(5.98):',NULL),(358,52,'Как объявить функцию на языке С++?',NULL),(359,52,'Величины, описанные внутри функции, а также ее параметры, являются:',NULL),(360,52,'Что здесь является именем функции?   void showMenu(string category) { }',NULL),(361,52,'Чему равен результат работы функции, при value=2.0 ?  double squareRoot(double value) {   return value*value; }',NULL),(362,52,'Дайте определение термину \"Перегрузка функций”?',NULL),(363,52,'Функция вычисляет произведение двух чисел. Исходные данные вводятся с клавиатуры. Какие проверки целесообразно ввести в программе:',NULL),(364,52,'Выберите ложное утверждение',NULL),(365,52,'Выберите ложное утверждение:',NULL),(366,52,'Выберите ложное утверждение:',NULL),(367,52,'Параметр функции описан как \"int& a\". Соответствующий ему аргумент может быть:',NULL),(368,52,'Список параметров функции описан как \"void\". Что можно сказать о параметрах этой функции?',NULL),(369,52,'Выберите ложное утверждение:',NULL),(370,53,'В чём заключаются недостатки при использовании передачи аргумента в функцию по значению?',NULL),(371,53,'Что будет выведено на экран, если вызвать данную функцию последовательно три раза? void f1() {       static int flag=0;        if (!flag) {         cout << \"false \";         flag=5;       }        else {         cout <<\"true \";         flag=0;       } }',NULL),(372,53,'Прототип функции задает',NULL),(373,53,'Сколько функций может быть в программе С++?',NULL),(374,53,'Если в программе уже имеется функция с прототипом int func(int k, double f), то какое из следующих объявлений не вызовет ошибки компиляции?',NULL),(375,53,'Что вычисляет эта функция:  double func(double x, int n) {       if (n == 0) return 1;       if (x == 0) return 0;       if (n > 0) return x * func(x, n-1);       if (n < 0) return func(x, n+1) / x;  }',NULL),(376,53,'В чем разница между фактическими и формальными параметрами?',NULL),(377,53,'Какое из следующих утверждений об операторе return является верным?',NULL),(378,53,'Если в программе уже имеется функция с прототипом int func(int k, double f), то какое из следующих объявлений не вызовет ошибки компиляции?',NULL),(379,53,'Укажите правильный вызов функции, объявленной следующим образом: void Iterat(int a, float b, short c)',NULL),(380,53,'Укажите правильное объявление функции',NULL),(381,53,'В каких случаях произойдет ошибка компиляции?',NULL),(382,53,'Укажите правильный вызов функции, объявленной следующим образом: void Iterat(int a, float b, short c)',NULL),(383,54,'Какой вывод будет в результате работы программы?  #include <stdio.h> int a, b, c, d; void f( int a, int& c, int& d) { int b;    a = 5; c = 7; b = 9; } int main() {    a = 1; c = 1; b = 1;    f(b,a,c);    printf (\"%d|%d|%d\",a,c,b);    return 0; }',NULL),(384,54,'Какой будет результат работы программы: #include <iostream> using namespace std; void f (int i, int j ) {      int tmp = j;      j = i;      i = tmp; } int main() {   int i = 10;   int j = 20;   f( i, j );    cout << \"i: \" << i << \"	 j: \" << j << endl;    return 0; }',NULL),(385,54,'Какой будет результат программы при вводе числа 5? #include \"stdafx.h\" #include <iostream> using namespace std; void sqr(int numb) {     int rezult = 1;     for (int i = 1; i <= numb; i++)         rezult *= i;     cout << numb << \"! = \" << rezult << endl } int main(int argc, char* argv[]) {     int digit;     cout << \"Enter number: \";     cin >> digit;     sqr(digit);     system(\"pause\");     return 0; }',NULL),(386,54,'В чем заключается смысл данной программы?  #include \"stdafx.h\" #include <iostream> using namespace std; bool wex(int);  int main(int argc, char* argv[]) {     cout << \"Enter 5zn-e chislo: \";      int in_number, out_number;      cin >> in_number;     out_number = in_number;      if (wex(in_number))          cout << \"Number \" << out_number << \" - yes\" << endl;     else         cout << \"No << endl;     system(\"pause\");     return 0; } bool wex(int number)  {     int balance1, balance2, balance4, balance5;      balance1 = number % 10;      number = number / 10;     balance2 = number % 10;     number = number / 100;      balance4 = number % 10;      number = number / 10;     balance5 = number % 10;      if ((balance1 == balance5) && (balance2 == balance4))         return true;     else         return false; }',NULL),(387,54,'Какой будет результат данной программы?  #include <iostream> using namespace std; int return7() {     return 7; } int main() {     cout << return7() << std::endl;     cout << return7() + 3 << std::endl;     return7();     return 0; }',NULL),(388,54,'Что будет на выводе при 3 шаге цикла? #include <iostream> #include <cstdlib> using namespace std; void greeting() {     static bool first = true;     if (first)     {         cout << \"Hello!\" << endl;         first = false;     }     else         cout << \"Hello again!\" << endl; } int main() {     int i;     for (i = 1; i <= 10; i++)         greeting();     return EXIT_SUCCESS; }',NULL),(389,54,'В чем заключается смысл данной программы?  #include \"stdafx.h\" #include <iostream> using namespace std; bool wex(int);  int main(int argc, char* argv[]) {     cout << \"Enter 5zn-e chislo: \";      int in_number, out_number;      cin >> in_number;     out_number = in_number;      if (wex(in_number))          cout << \"Number \" << out_number << \" - yes\" << endl;     else         cout << \"No << endl;     system(\"pause\");     return 0; } bool wex(int number)  {     int balance1, balance2, balance4, balance5;      balance1 = number % 10;      number = number / 10;     balance2 = number % 10;     number = number / 100;      balance4 = number % 10;      number = number / 10;     balance5 = number % 10;      if ((balance1 == balance5) && (balance2 == balance4))         return true;     else         return false; }',NULL),(390,54,'Результат работы программы:  #include <iostream> #include <cstdlib> using namespace std; int a(int); // прототип int b(int n) { 	if (n == 1) 		return 1; 	return 7 * a(n - 1) + 2 * b(n - 1); } int a(int n) { 	if (n == 1) 		return 2; 	return 3 * a(n - 1) - 5 * b(n - 1); } int main() { 	cout << \"a(2)=\" << a(2) << endl; 	cout << \"b(2)=\" << b(2) << endl; 	return EXIT_SUCCESS; } ',NULL),(391,54,'Какой будет результат работы программы:  #include <iostream> using namespace std; int main() {     int f()     {         cout << \"vosk!\n\";         return 0;     }     f();     return 0; }',NULL),(392,54,'Результат работы программы:  #include <iostream> int return5() {     return 5; } int return8() {     return 8; } int main() {     return5();     return8();     return 0; }',NULL),(393,54,'Результат работы программы:   #include <iostream> using namespace std; int getNumbers() {     return 6;     return 8; }   int main() {     cout << getNumbers() << std::endl;     cout << getNumbers() << std::endl;     return 0; }',NULL),(394,48,'Что будет выведено на экран в результате выполнения приведенной ниже программы?   #include \"iostream.h\" #include \"conio.h\" int main() { int *a; int b=7; a = &b; b+= 7; (*a)++; cout << a; getch(); return 0; }',NULL),(395,49,'Какое значение будет выведено на экран, в результате выполнения программы?  #include <iostream> using namespace std; int main(void) {     double** p = 0;     *(*(p = new double*) = new double) = 2;     cout << **p << endl;     delete* p;     delete p; }',NULL),(396,49,'Программа должна вывести на экран число 256. Какие операторы надо вставить вместо многоточий?  #include <iostream> using namespace std; int main(void) {     setlocale(LC_ALL, \"Russian\");     int a = 5;      int* p;     …     *p = 256;      cout << …;      return 0; }',NULL),(402,75,'Какими по умолчанию объявляются методы класса?',NULL),(403,75,'Класс - это',NULL),(404,75,'Что целесообразно определять в public разделе класса?',NULL),(405,75,'Какие виды наследования бывают (выберите наиболее полный ответ)?',NULL),(406,75,'Абстрактный класс – это класс, в котором',NULL),(407,75,'Что называется наследованием?',NULL),(408,75,'Шаблон функции – это',NULL),(409,75,'Конструктор класса - это метод, который вызывается при создании объекта для ',NULL),(410,75,'Возможность и способ обращения производного класса к элементам базового определяется:',NULL),(411,75,'Полиморфизм реализован через механизмы:',NULL),(412,76,'Основные особенности объективно-ориентированного подхода?',NULL),(413,76,'Выберите правильное утверждение. Технология ООП по сравнению с традиционной позволяет создавать:',NULL),(414,76,'Выберите правильные утверждения. Упрощение структуры программы всегда приводит',NULL),(415,76,'Выберите правильные утверждения. Инкапсуляция — это:',NULL),(416,76,'Выберите правильное утверждение. Технология ООП по сравнению с традиционной позволяет создавать:',NULL),(417,76,'Выберите правильные утверждения. Преимуществами ООП являются:',NULL),(418,78,'Вызовет данный код ошибку компиляции? class Rectangle public: int a, b; int sum (); int square (); ~ Rect (); };',NULL),(419,79,'Укажите какое задание класса будет правильным?    class A    { public :  int a, b;      protected : int z;     private : short i; } A1;  class B : public A    { public :  int c, d;      private : int k;} B1;',NULL),(420,79,'Что выведет программа в стандартный поток вывода?  class A {   public :  int a, b;  protected : int z;  private : short id;  } A1;  class B : protected A { public : short t;  void ff(short a)  { id = ++a; } } B1;  int main() {   B1.ff(20);  cout << B1.id; }',NULL),(421,79,'Какой результат будет у следующего выражения?      class A     { friend int Freund();             friend class B;         public : int x, y;         private: short i;     } A1;   class B     {  public : void func_B(); }B1;    int Freund()     {  A1.x = 1; A1.y = 2; A1.i += 3;       return A1.x + A1.y + A1.i;        }   void B::func_B()     {  A1.i = 2; }   int main()     {  B1.func_B(); cout << Freund(); }',NULL),(422,79,'На какой строке произойдет ошибка компиляции?  1:class A 2:  { public: void f1(int &a){val+=a++;};//val инициализируется в конструкторе 3:          int  f2() {return val+1;};  4:          int val;  5: } A1; 6:int main() 7:  {   8:       A1.f1();  9:       A1.f2();  10:  }',NULL),(423,79,'Что нужно изменить, чтобы данный код скомпилировался? class B {      virtual void f() {}  };  class V {      virtual void g() {}  };  class X {  };  class D : public B, virtual public V, virtual public X {  };  int main() {      D d;      B* pb = &d;      D* p1 = (D*)pb;                // 1      D* p2 = dynamic_cast<D*>(pb);        // 2      V* pv = &d;      D* p3 = (D*)pv;                // 3      D* p4 = dynamic_cast<D*>(pv);        // 4      X* px = &d;      D* p5 = (D*)px;                // 5      D* p6 = dynamic_cast<D*>(px);        // 6      return 0;  }',NULL),(424,79,'Каким будет результат данной программы при значениях 3 и 19?  #include <iostream> using namespace std; struct List {     int data;     List* next; };  List* head = NULL;  void add(int data) {     List* curr = new List;     List* ptr = head;     curr->data = data;     curr->next = head;     if (head != NULL) {         while (ptr->next != head) {             ptr = ptr->next;         }         ptr->next = curr;     }     else {         curr->next = curr;     }     head = curr; } void f(int m) {     List* ptr;     ptr = head;     int k = 0;     do {         ptr->data++;         k++;         ptr = ptr->next;     } while (k != m); }  void print(int n) {     List* ptr;     ptr = head;     int k = 0;     do {         cout << ptr->data << \" \";         k++;         ptr = ptr->next;     } while (k != n + 1); }  int main() {     int n, m;     cout << \"Count a number of Emma`s friends:\n\";     cout << \"n = \";     cin >> n;     cout << \"Enter a number of sweets:\n\";     cout << \"m = \";     cin >> m;     for (int j = 1; j <= n + 1; j++) {         add(0);     }     f(m);     cout << \"Output of the program:\n\";     print(n);     return 0; }',NULL),(425,79,'Каким будет результат работы программы?  #include <iostream> class DateClass { public:     int m_day;     int m_month;     int m_year;     void print()     {         std::cout << m_day << \"/\" << m_month << \"/\" << m_year;     } };   int main() {     DateClass today { 12, 11, 2018 };     today.m_day = 18;     today.print();     return 0; }',NULL),(426,79,'Каким будет результат работы программы?  #include <iostream>   class Numbers { public: 	int m_first; 	int m_second; 	 	void set(int first, int second) 	{ 		m_first = first; 		m_second = second; 	} 	void print() 	{ 		std::cout << \"Numbers(\" << m_first << \", \" << m_second << \")\n\"; 	} };   int main() { 	Numbers n1; 	n1.set(3, 3); 	Numbers n2{ 4, 4 }; 	n1.print(); 	n2.print(); 	return 0; }',NULL),(427,79,'Что находит данная программа?  #include <iostream> #include <string> using namespace std; class Students { public:     void set_name(string student_name)     {         name = student_name;     }     string get_name()     {         return name;     }     void set_last_name(string student_last_name)     {         last_name = student_last_name;     }     string get_last_name()     {         return last_name;     }     void set_scores(int student_scores[])     {         for (int i = 0; i < 5; ++i) {             scores[i] = student_scores[i];         }     }     void set_average_ball(float ball)     {         average_ball = ball;     }     float get_average_ball()     {         return average_ball;     } private:     int scores[5];     float average_ball;     string name;     string last_name; }; int main() {     Students student;     string name;     string last_name;     cout << \"Name: \";     getline(cin, name);     cout << \"Last name: \";     getline(cin, last_name);      student.set_name(name);     student.set_last_name(last_name);     int scores[5];     int sum = 0;     for (int i = 0; i < 5; ++i) {         cout << \"Score \" << i + 1 << \": \";         cin >> scores[i];         sum += scores[i];     }     student.set_scores(scores);     float avg= sum / 5.0;     student.set_avg(avg);     cout << \"avg for\" << student.get_name() << \" \"         << student.get_last_name() << \" is \"         << student.get_avg() << endl;     return 0; }',NULL),(428,79,'Каким будет результат данной программы при значениях 3 и 19?  #include <iostream> using namespace std; struct List {     int data;     List* next; };  List* head = NULL;  void add(int data) {     List* curr = new List;     List* ptr = head;     curr->data = data;     curr->next = head;     if (head != NULL) {         while (ptr->next != head) {             ptr = ptr->next;         }         ptr->next = curr;     }     else {         curr->next = curr;     }     head = curr; } void f(int m) {     List* ptr;     ptr = head;     int k = 0;     do {         ptr->data++;         k++;         ptr = ptr->next;     } while (k != m); }  void print(int n) {     List* ptr;     ptr = head;     int k = 0;     do {         cout << ptr->data << \" \";         k++;         ptr = ptr->next;     } while (k != n + 1); }  int main() {     int n, m;     cout << \"Count a number of Emma`s friends:\n\";     cout << \"n = \";     cin >> n;     cout << \"Enter a number of sweets:\n\";     cout << \"m = \";     cin >> m;     for (int j = 1; j <= n + 1; j++) {         add(0);     }     f(m);     cout << \"Output of the program:\n\";     print(n);     return 0; }',NULL),(429,79,'Каким будет результат работы программы?  #include <iostream>   class Numbers { public: 	int m_first; 	int m_second; 	 	void set(int first, int second) 	{ 		m_first = first; 		m_second = second; 	} 	void print() 	{ 		std::cout << \"Numbers(\" << m_first << \", \" << m_second << \")\n\"; 	} };   int main() { 	Numbers n1; 	n1.set(3, 3); 	Numbers n2{ 4, 4 }; 	n1.print(); 	n2.print(); 	return 0; }',NULL),(430,79,'Каким будет результат работы программы при значениях 5, 7?  #include <iostream>  using namespace std; class summa {   int x,y;     public:    void get_xy()      {        cout << \"Wwedi X:  \";        cin >> x;        cout << \"Wwedi Y:  \";        cin >> y;      }     int sum_xy()    {      return x+y;    }   } s1; int main() {   s1.get_xy();   cout << s1.x << `\n`; }',NULL),(432,70,'В операционной системе Windows реализуется многозадачность:',NULL),(433,70,'В операционной системе Windows реализуется многозадачность, основанная на потоках и процессах. При этом под процессом понимается:',NULL),(434,70,'Функция, вызываемая при отпускании клавиши на клавиатуре, задается в обработчике события: ',NULL),(435,70,'Свойство Color визуальных компонентов задает:',NULL),(436,70,'Библиотека C++ для визуального программирования называется:',NULL),(437,70,'Свойство Width визуальных компонентов измеряется в:',NULL),(438,70,'Свойство Height визуальных компонентов задает:',NULL),(439,70,'Свойство Width визуальных компонентов задает',NULL),(440,70,'Библиотека C++ для визуального программирования называется:',NULL),(441,70,'Синхронными называются функции, исполняемые: ',NULL),(442,70,'Асинхронными называются функции, исполняемые: ',NULL),(443,70,'Свойство Height визуальных компонентов задает:',NULL),(444,70,'Свойство Width визуальных компонентов задает',NULL),(445,71,'Точкой входа в программу на языке С++ является функция',NULL),(446,71,'Программа на языке С++ начинает свою работу',NULL),(447,71,'Графический интерфейс пользователя – это …',NULL),(448,71,'Библиотека FCL входит в состав …',NULL),(449,71,'Стартовая функция приложения, написанного на С++',NULL),(450,71,'Тип «короткое целое знаковое число» в С++ записывается как…',NULL),(451,71,'При определении typedef char BYTE этот тип является',NULL),(452,71,'Переменная типа handle обычно называется…',NULL),(453,71,'При описании функций Win32 API «WINAPI» является',NULL),(454,71,'Какой класс отвечает за элемент управления кнопок?',NULL),(455,71,'Какой класс отвечает за элемент управления списка?',NULL),(456,71,'Какой класс отвечает за элемент управления полосы прокрутки?',NULL),(457,71,'Какой класс отвечает за элемент управления статических элементов?',NULL),(458,71,'Какой класс отвечает за элемент управления комбинированных списков?',NULL),(459,71,'Какой класс отвечает за элемент управления поля ввода?',NULL),(460,71,'Какой класс отвечает за элемент управления полосы прокрутки?',NULL),(461,72,'Обработчик события OnDblClick задает:',NULL),(462,72,'Если в программе имеется три окна, то она может содержать:',NULL),(463,72,'Если в программе не имеется ни одного окна, то она: ',NULL),(464,72,'Функция, вызываемая при нажатии клавиши на клавиатуре, задается в обработчике события: ',NULL),(465,71,'Какой класс отвечает за элемент управления поля ввода?',NULL),(466,72,'Оконные программы Windows являются…',NULL),(467,72,'События в Windows называются',NULL),(468,72,'Библиотека COMCTL32.DLL содержит…',NULL),(469,72,'Оконные программы Windows являются…',NULL),(470,72,'В функции  HWND WINAPI CreateWindow(  …  )  параметр nWindth задает…',NULL),(471,72,'События в Windows называются',NULL),(472,72,'Стиль окна WS_POPUP – это…',NULL),(473,72,'Библиотека COMCTL32.DLL содержит…',NULL),(474,72,'Функция диалогового окна BOOL WINAPI IsWindowEnabled(HWND hw) возвращает TRUE, если…',NULL),(475,72,'Что не может размещаться в файле ресурсов?',NULL),(476,72,'Что означает следующий код оповещения? CBN_DROPDOWN',NULL),(477,72,'Что означает следующий код оповещения? CBN_SELENDOK',NULL),(478,72,'Что означает следующий код оповещения? CBN_SELENCANCEL',NULL),(479,72,'Что означает следующий код оповещения? CBN_CLOSEUP',NULL),(480,72,'Что означает следующий код оповещения? CBN_SELCHANGE',NULL),(481,72,'Что означает следующий код оповещения? CBN_SELENDOK',NULL),(482,73,'В операционной системе Windows реализуется многозадачность, основанная на потоках и процессах. При этом под потоком понимается: ',NULL),(483,73,'При многозадачности, основанной на потоках: ',NULL),(484,73,'При многозадачности, основанной на процессах: ',NULL),(485,73,'Синхронными называются функции, исполняемые: ',NULL),(486,73,'Асинхронными называются функции, исполняемые: ',NULL),(487,73,'Обработчик события OnClick задает:',NULL),(488,73,'Свойство Top визуальных компонентов задает:',NULL),(489,73,'Свойство Left визуальных компонентов задает:',NULL),(490,73,'Что будет выведено на экран в результате выполнения следующего кода? #include <iostream>  using namespace std;    class ABase {  public:      void f(int i) const { cout << 1;}      void f(char ch) const { cout << 2; }  };    class BBase {  public:      void f(double d) const { cout << 3;}  };    class ABBase : public ABase, public BBase {  public:      using ABase::f;      using BBase::f;              void f(char ch) const { cout << 4; }  };    void g(ABBase& ab) {      ab.f(`c`);      ab.f(2.5);      ab.f(4);  }    int main() {      ABBase ab;      g(ab);  }',NULL),(491,73,'Дан следующий код: class A { };  class B : public A { };  class C : public B { };  class D : public C { };    void method(B* b) { }  void method(C* c) { }    int main() {    ...    return 0;  }  Какие фрагменты кода, вставленные вместо многоточия в методе main, не приведут к ошибке компиляции?',NULL),(492,73,'Какой системный класс отвечает за кнопку?',NULL),(493,73,'Какой системный класс отвечает за окно со списком?',NULL),(494,73,'Что будет выведено на экран в результате выполнения следующего кода? #include <iostream>  using namespace std;    class ABase {  public:      void f(int i) const { cout << 1;}      void f(char ch) const { cout << 2; }  };    class BBase {  public:      void f(double d) const { cout << 3;}  };    class ABBase : public ABase, public BBase {  public:      using ABase::f;      using BBase::f;              void f(char ch) const { cout << 4; }  };    void g(ABBase& ab) {      ab.f(`c`);      ab.f(2.5);      ab.f(4);  }    int main() {      ABBase ab;      g(ab);  }',NULL),(495,73,'Какой системный класс отвечает за окно редактирования текста?',NULL),(496,73,'Какой системный класс отвечает за полосу прокрутки?',NULL),(497,73,'Какой системный класс отвечает за статический элемент?',NULL),(498,73,'Какой системный класс отвечает за комбинированное окно?',NULL),(499,74,'Что выведет следующий код: #include <iostream>  using namespace std;  class Base {      public:          void method(){};  };    class Child : public Base {      public:          void method() { cout << \"Child\"; };  };    int main()  {      Base* base = new Child();      base->method();         return 0;   }',NULL),(500,74,'Что выведет данная программа? #include <iostream>  using namespace std; class base  {  public:      base()       {          cout << \"base()\";      }      virtual ~base()       {          cout << \"~base()\";      }      void f()      {          cout << \"base f()\";      }  };  class derived: public base  {  public:      derived()      {          cout << \"derived()\";      }      ~derived()      {          cout << \"~derived()\";      }      void f()      {          cout << \"derived f()\";      }  };  int main()  {      base* ob = new derived;      dynamic_cast<derived*>(ob)->f();       return 0;  }',NULL),(501,73,'Какой системный класс отвечает за статический элемент?',NULL),(502,74,'Чем отличается объединение от класса?',NULL),(503,74,'Что будет выведено на экран в результате выполнения следующего кода? #include <iostream>  using namespace std;    class ABase {  public:      void f(int i) const { cout << 1;}      void f(char ch) const { cout << 2; }  };  class BBase {  public:      void f(double d) const { cout << 3;}  };  class ABBase : public ABase, public BBase {  public:      void f(char ch) const { cout << 4; }  };  void g(ABBase& ab) {      ab.f(`c`);      ab.f(2.5);      ab.f(4);  }  int main() {      ABBase ab;      g(ab);  }',NULL),(504,74,'Что не верно в следующем коде: class Parent {     public:      ~Parent() { }      virtual void method() { }  };  class Child : public Parent {     public:      Child() { /* захват ресурсов */ }      ~Child() { /* освобождение ресурсов */ }      void method() { /* программный код */ }  };  int main() {    Parent * obj = new Child;    // программный код    delete obj;    return 0;  }',NULL),(505,74,'Что будет выведено на экран? #include<iostream> using namespace std; class Base  {     public:        virtual void f() { cout << \"Base\"; }  };  class Child : public Base  {     public:        int f() { cout << \"Child\"; }  };    int main()  {     Child c;     c.f();  }',NULL),(506,74,'В каких строках кода произойдут ошибки компиляции? class B {      virtual void f() {}  };  class V {      virtual void g() {}  };  class X {  };  class D : public B, virtual public V, virtual public X {  };  int main() {      D d;      B* pb = &d;      D* p1 = (D*)pb;                // 1      D* p2 = dynamic_cast<D*>(pb);        // 2      V* pv = &d;      D* p3 = (D*)pv;                // 3      D* p4 = dynamic_cast<D*>(pv);        // 4      X* px = &d;      D* p5 = (D*)px;                // 5      D* p6 = dynamic_cast<D*>(px);        // 6      return 0;  }',NULL),(507,74,'Предполагается, что в интерфейсе Windows проекте на форме расположены два текстовых окна с именами textBoxName и textBoxHello. Что произойдет, когда при выполнении некоторого обработчика события будет выполняться оператор присваивания:  textBoxHello.Text = \"Привет,\" +  textBoxName.Text  + \"!\"',NULL),(508,74,'Что будет выведено на экран (в какой последовательности будут вызваны деструкторы)? #include <iostream>  using namespace std;  class A {      public:      A () {}      ~A() { cout << \"~A\";}  };  class B : public A {      public:      B () {}      ~B () { cout << \"~B\"; }  };  int main () {      A *b = new B ();      delete b;      return 0;  }',NULL),(509,74,'Что произойдет при компиляции и выполнении кода? #include <iostream>  using namespace std;  class A {  public:      A() { f(\"A()\"); }      ~A() { f(\"~A()\"); }  protected:      virtual void f(const char* str) = 0;  };  class B : public A {  public:      B() { f(\"B()\"); }      ~B() { f(\"~B()\"); }  protected:      void f(const char* str) { cout<< str << endl; }  };  int main() {      B b;      return 0;  }',NULL),(510,74,'Дан код программы. За что отвечает 2-я строка? LRESULT WINAPI SendDlgItemMessage(   HWND hwndDlg,	 /* дескриптор родительского диалога */   int idControl, /* идентификатор управляющего элемента */   UINT msg,      /* код сообщения */   WPARAM wp,     /* параметр сообщения */   LPARAM lp      /* параметр сообщения */ ) ',NULL),(511,74,'Что произойдет при выполнении данной функции?  HWND hWnd = CreateWindow(lpzClass, TEXT(\"Dialog Window\"), WS_OVERLAPPEDWINDOW | WS_VISIBLE, x, y, 400, 400, NULL, NULL, hInstance, NULL);',NULL),(512,80,'Какой из следующих логических операторов - логический оператор ИЛИ?',NULL),(513,80,'В какой из следующих строк выполняется обращение к седьмому элементу массива, если размер массива равен 10?',NULL),(514,80,'Укажите корректное определение строковой переменной:',NULL),(515,80,'Какой результат следующего выражения? int* a;  int b;  a = &b;  b = 7;  *a++;  cout << b;',NULL),(516,80,'Количество формальных параметров передаваемой функции?',NULL),(517,80,'Укажите правильное обращение к полям структуры:  struct coord{int x; int z;}data; ',NULL),(518,80,'Структура данных, работа с элементами которой организована по принципу FIFO (первый пришел - первый ушел) это:',NULL),(519,80,'С помощью функции fopen( ) можно открыть файл: ',NULL),(520,80,'Функция, вызываемая при отпускании клавиши на клавиатуре, задается в обработчике события: ',NULL),(521,80,'Что называется наследованием?',NULL);
/*!40000 ALTER TABLE `test_question` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-03-01 13:24:40
